// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// HDTMcpp
Rcpp::List HDTMcpp(arma::Mat<unsigned int> Y, arma::Mat<unsigned int> edge, arma::vec tau_vec, arma::vec nu_vec, arma::vec theta_vec, arma::Col<unsigned int> c, arma::Col<unsigned int> gamma_sample, double alpha, unsigned int mcmc_iter, bool select);
RcppExport SEXP _DTMM_HDTMcpp(SEXP YSEXP, SEXP edgeSEXP, SEXP tau_vecSEXP, SEXP nu_vecSEXP, SEXP theta_vecSEXP, SEXP cSEXP, SEXP gamma_sampleSEXP, SEXP alphaSEXP, SEXP mcmc_iterSEXP, SEXP selectSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Mat<unsigned int> >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::Mat<unsigned int> >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau_vec(tau_vecSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nu_vec(nu_vecSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_vec(theta_vecSEXP);
    Rcpp::traits::input_parameter< arma::Col<unsigned int> >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::Col<unsigned int> >::type gamma_sample(gamma_sampleSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type mcmc_iter(mcmc_iterSEXP);
    Rcpp::traits::input_parameter< bool >::type select(selectSEXP);
    rcpp_result_gen = Rcpp::wrap(HDTMcpp(Y, edge, tau_vec, nu_vec, theta_vec, c, gamma_sample, alpha, mcmc_iter, select));
    return rcpp_result_gen;
END_RCPP
}
// HDTMcpp_centroid
Rcpp::List HDTMcpp_centroid(arma::Mat<unsigned int> Y, arma::Mat<unsigned int> edge, arma::vec tau_vec, arma::vec nu_vec, arma::vec theta_vec, arma::Col<unsigned int> c, arma::Col<unsigned int> gamma_sample);
RcppExport SEXP _DTMM_HDTMcpp_centroid(SEXP YSEXP, SEXP edgeSEXP, SEXP tau_vecSEXP, SEXP nu_vecSEXP, SEXP theta_vecSEXP, SEXP cSEXP, SEXP gamma_sampleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Mat<unsigned int> >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::Mat<unsigned int> >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau_vec(tau_vecSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nu_vec(nu_vecSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_vec(theta_vecSEXP);
    Rcpp::traits::input_parameter< arma::Col<unsigned int> >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::Col<unsigned int> >::type gamma_sample(gamma_sampleSEXP);
    rcpp_result_gen = Rcpp::wrap(HDTMcpp_centroid(Y, edge, tau_vec, nu_vec, theta_vec, c, gamma_sample));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DTMM_HDTMcpp", (DL_FUNC) &_DTMM_HDTMcpp, 10},
    {"_DTMM_HDTMcpp_centroid", (DL_FUNC) &_DTMM_HDTMcpp_centroid, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_DTMM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
